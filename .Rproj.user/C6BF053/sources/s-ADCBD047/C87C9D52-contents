#' given observations for Test and Reference,
#' the function calculates the test statistic with the tail-test
#'
#' @param Test vector of observations from Test
#' @param Reference vector of observations from Reference
#' @param q which quantil should be used (e.g., q=0.05)
#' @param alpha significance level
#'
#' @export
testis.tails <- function(Test, Reference, q, alpha) {
  mT <- mean(Test)
  mR <- mean(Reference)
  sT <- sd(Test)
  sR <- sd(Reference)
  quan1 <- qnorm(q, mean=mR, sd=sR)
  ci1 <- q-pnorm(quan1, mean=mT, sd=sT)

  quan2 <- qnorm(1-q, mean=mR, sd=sR)
  ci2 <- q-(1-pnorm(quan2, mean=mT, sd=sT))

  n <- length(Test)
  m <- length(Reference)


  teststat <- ci1+ci2

  critical.value <- critical(m,n,q,alpha)

  testdec <- (teststat > unname(critical.value))
  out = list(nT = n,
             nR = m,
             mT = mT,
             mR = mR,
             sT = sT
             sR = sR,
             statistic = teststat,
             critical.value = critical.value,
             decision = testdec)
  return(out)
}


critical <- function(m,n,q,alpha) {
  ci = numeric()
  for (i in 1:10000) {
    # use the FDA's null hypothesis
    Test <- rnorm(n, mean=1.5, sd=1)
    Reference <- rnorm(m, mean=0, sd=1)

    # estimate mean values
    mT <- mean(Test)
    mR <- mean(Reference)
    sT <- sd(Test)
    sR <- sd(Reference)

    quan1 <- qnorm(q, mean=mR, sd=sR)
    ci1 <- q-pnorm(quan1, mean=mT, sd=sT)

    quan2 <- qnorm(1-q, mean=mR, sd=sR)
    ci2 <- q-(1-pnorm(quan2, mean=mT, sd=sT))

    ci[i] <- ci1+ci2
  }
  critic <- quantile(ci, 1-alpha)
  return(critic)
}

# ##Figure
#
# mT <- mean(Test)
# mR <- mean(Reference)
# sT <- sd(Test)
# sR <- sd(Reference)
# quan1 <- qnorm(q, mean=mR, sd=sR)
# quan2 <- qnorm(1-q, mean=mR, sd=sR)
#
# xseq <- seq(-7,7,length=1000)
# resd1 <- resd2 <- numeric(1000)
# for (i in 1:1000) {
#   resd1[i] <- dnorm(xseq[i], mean=mT, sd=sT)
#   resd2[i] <- dnorm(xseq[i], mean=mR, sd=sR)
# }
# par(mfrow=c(1,2))
#
# #left panel
# curve(dnorm(x, mean=mR, sd=sR), xlim=c(-7,7), main="Reference", ylab="Density", ylim=c(0,max(c(resd1,resd2))+0.01))
# abline(v=quan1, lty=2)
# abline(v=quan2, lty=2)
#
# #right panel
# curve(dnorm(x, mean=mT, sd=sT), xlim=c(-7,7), main="Test", ylab="Density", ylim=c(0,max(c(resd1,resd2))+0.01))
# abline(v=quan1, lty=2)
# abline(v=quan2, lty=2)
# polygon(c( xseq[xseq<quan1], quan1),  c(resd1[xseq<quan1],0), col="red")
# polygon(c( xseq[xseq>quan2], quan2),  c(resd1[xseq>quan2],0), col="blue")
